from isaacgym import gymapi
from pathlib import Path

def get_obj_dict(GymURDFAsset, scene, cfg):
    objects = {'block': [GymURDFAsset('assets/block.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0, 0, 0, 1)], 
                'disc': [GymURDFAsset('assets/disc.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0, 0, 0, 1)], 
                'heart': [GymURDFAsset('assets/heart.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                'hexagon': [GymURDFAsset('assets/hexagon.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                'parallelogram': [GymURDFAsset('assets/parallelogram.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                'semicircle': [GymURDFAsset('assets/semicircle.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                'shuriken': [GymURDFAsset('assets/shuriken.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                'star': [GymURDFAsset('assets/star.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                'trapezium': [GymURDFAsset('assets/trapezium.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                'triangle': [GymURDFAsset('assets/triangle.urdf', scene, 
                    shape_props=cfg['object']['shape_props'], 
                    rb_props=cfg['object']['rb_props'],
                    asset_options=cfg['object']['asset_options'],
                    assets_root=Path('config')), gymapi.Quat(0.7071068, 0, 0, 0.7071068)],
                }

    return objects